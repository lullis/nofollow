- name: install uwsgi
  tags: webapp, uwsgi
  become: true
  become_user: "{{ cindy_app_username }}"
  pip:
    name: uwsgi
    virtualenv: "{{ cindy_app_virtualenv_folder_path }}"

- name: register where the application was installed
  tags: webapp, application
  become: true
  become_user: "{{ cindy_app_username }}"
  shell: "set -a && . {{ cindy_app_service_environment_file_path }} && {{ cindy_app_virtualenv_folder_path }}/bin/python -c 'import {{ cindy_application_name }}; print({{ cindy_application_name }}.__path__[0])'"
  register: cindy_webapp_installed_path_result

- name: install uwsgi configuration file
  tags: webapp, uwsgi
  become: true
  template:
    src: etc/uwsgi/uwsgi.ini.j2
    dest: "{{ cindy_webapp_uwsgi_config_file_path }}"
    owner: "{{ cindy_app_username }}"
    group: "{{ cindy_app_username }}"

- name: collect static files
  tags: webapp, staticfiles
  become: true
  become_user: "{{ cindy_app_username }}"
  shell: "set -a && . {{ cindy_app_service_environment_file_path }} && {{ cindy_app_virtualenv_folder_path }}/bin/django-admin collectstatic --noinput"

- name: run migrations
  tags: webapp, staticfiles
  become: true
  become_user: "{{ cindy_app_username }}"
  shell: "set -a && . {{ cindy_app_service_environment_file_path }} && {{ cindy_app_virtualenv_folder_path }}/bin/django-admin migrate"

- name: install systemd service configuration
  tags: webapp, systemd
  become: true
  template:
    src: etc/systemd/system/cindy_webapp.j2
    dest: "/etc/systemd/system/{{ cindy_webapp_service_name }}.service"

- name: enable service
  tags: webapp, systemd
  become: true
  systemd:
    name: "{{ cindy_webapp_service_name }}"
    enabled: true
    state: restarted
    daemon_reload: true
